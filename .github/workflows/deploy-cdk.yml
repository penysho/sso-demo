name: Infrastructure and Application Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        type: choice
        default: "tst"
        options:
          - dev
          - tst
      is_application_deploy:
        description: "Whether to deploy the application"
        required: true
        type: boolean
        default: true
  pull_request:

jobs:
  deploy-cdk:
    name: Deploy CDK
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 22.8

      - name: Cache CDK Dependency
        uses: actions/cache@v3
        id: cache-cdk-dependency
        env:
          cache-name: cache-cdk-dependency
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install CDK Dependency
        if: ${{ steps.cache-cdk-dependency.outputs.cache-hit != 'true' }}
        run: |
          cd cdk
          npm install

      - name: Get latest image tag
        if: ${{ !inputs.is_application_deploy }}
        env:
          ECR_REPOSITORY_NAME: sso-demo-${{ inputs.environment }}
        run: |
          export latest_image_tag=$(aws ecr describe-images \
            --repository-name ${{ env.ECR_REPOSITORY_NAME }} \
            --region ap-northeast-1 \
            --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' \
            --output text)
          echo "BACKEND_IMAGE_TAG=${latest_image_tag}" >> $GITHUB_ENV

      - name: Set new image tag
        if: ${{ inputs.is_application_deploy }}
        run: |
          echo "BACKEND_IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: CDK Diff Check
        if: contains(github.event_name, 'pull_request')
        run: |
          cd cdk
          npx cdk diff

      - name: CDK Deploy
        if: contains(github.event_name, 'pull_request')
        run: |
          cd cdk
          npx cdk deploy --all --require-approval never -c githubToken=${{ secrets.AMPLIFY_GITHUB_TOKEN }} -c backendImageTag=${{ env.BACKEND_IMAGE_TAG }} -c isApplicationDeploy=${{ inputs.is_application_deploy }}

  deploy-application:
    name: Deploy Application
    needs: deploy-cdk
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy app with CodeDeploy Blue/Green deployment
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: sso-demo-backend-${{ inputs.environment }}
          cluster: sso-demo-${{ inputs.environment }}
          service: sso-demo-backend-${{ inputs.environment }}
          codedeploy-appspec: codedeploy/appspec.yml
          codedeploy-application: sso-demo-backend-${{ inputs.environment }}
          codedeploy-deployment-group: sso-demo-backend-${{ inputs.environment }}-group1
